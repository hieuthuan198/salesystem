package entitis;
// Generated Jul 24, 2019 11:13:14 PM by Hibernate Tools 5.1.7.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "salesystem")
public class Account implements java.io.Serializable {

	private String username;
	private Role role;
	private String password;
	private Set<Banner> banners = new HashSet<Banner>(0);
	private Set<Blog> blogs = new HashSet<Blog>(0);
	private Set<Feedback> feedbacks = new HashSet<Feedback>(0);
	private Set<FeedbackRep> feedbackReps = new HashSet<FeedbackRep>(0);
	private Set<RepCommentBlog> repCommentBlogs = new HashSet<RepCommentBlog>(0);
	private Set<CommentBlog> commentBlogs = new HashSet<CommentBlog>(0);
	private Set<InformationUser> informationUsers = new HashSet<InformationUser>(0);
	private Set<CommentProduct> commentProducts = new HashSet<CommentProduct>(0);
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<RepcommentProduct> repcommentProducts = new HashSet<RepcommentProduct>(0);

	public Account() {
	}

	public Account(String username, Role role, String password) {
		this.username = username;
		this.role = role;
		this.password = password;
	}

	public Account(String username, Role role, String password, Set<Banner> banners, Set<Blog> blogs,
			Set<Feedback> feedbacks, Set<FeedbackRep> feedbackReps, Set<RepCommentBlog> repCommentBlogs,
			Set<CommentBlog> commentBlogs, Set<InformationUser> informationUsers, Set<CommentProduct> commentProducts,
			Set<Employee> employees, Set<RepcommentProduct> repcommentProducts) {
		this.username = username;
		this.role = role;
		this.password = password;
		this.banners = banners;
		this.blogs = blogs;
		this.feedbacks = feedbacks;
		this.feedbackReps = feedbackReps;
		this.repCommentBlogs = repCommentBlogs;
		this.commentBlogs = commentBlogs;
		this.informationUsers = informationUsers;
		this.commentProducts = commentProducts;
		this.employees = employees;
		this.repcommentProducts = repcommentProducts;
	}

	@Id

	@Column(name = "username", unique = true, nullable = false, length = 32)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Banner> getBanners() {
		return this.banners;
	}

	public void setBanners(Set<Banner> banners) {
		this.banners = banners;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Blog> getBlogs() {
		return this.blogs;
	}

	public void setBlogs(Set<Blog> blogs) {
		this.blogs = blogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Feedback> getFeedbacks() {
		return this.feedbacks;
	}

	public void setFeedbacks(Set<Feedback> feedbacks) {
		this.feedbacks = feedbacks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<FeedbackRep> getFeedbackReps() {
		return this.feedbackReps;
	}

	public void setFeedbackReps(Set<FeedbackRep> feedbackReps) {
		this.feedbackReps = feedbackReps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<RepCommentBlog> getRepCommentBlogs() {
		return this.repCommentBlogs;
	}

	public void setRepCommentBlogs(Set<RepCommentBlog> repCommentBlogs) {
		this.repCommentBlogs = repCommentBlogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<CommentBlog> getCommentBlogs() {
		return this.commentBlogs;
	}

	public void setCommentBlogs(Set<CommentBlog> commentBlogs) {
		this.commentBlogs = commentBlogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<InformationUser> getInformationUsers() {
		return this.informationUsers;
	}

	public void setInformationUsers(Set<InformationUser> informationUsers) {
		this.informationUsers = informationUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<CommentProduct> getCommentProducts() {
		return this.commentProducts;
	}

	public void setCommentProducts(Set<CommentProduct> commentProducts) {
		this.commentProducts = commentProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<RepcommentProduct> getRepcommentProducts() {
		return this.repcommentProducts;
	}

	public void setRepcommentProducts(Set<RepcommentProduct> repcommentProducts) {
		this.repcommentProducts = repcommentProducts;
	}

}
