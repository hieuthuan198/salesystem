package entitis;
// Generated Jul 24, 2019 11:13:14 PM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "salesystem")
public class Product implements java.io.Serializable {

	private Integer id;
	private Brand brand;
	private ProductType productType;
	private Sale sale;
	private Store store;
	private String name;
	private String property;
	private Long price;
	private Integer quatily;
	private String describe;
	private Date dateCreate;
	private boolean status;
	private Set<EvaluateProduct> evaluateProducts = new HashSet<EvaluateProduct>(0);
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
	private Set<ImageProduct> imageProducts = new HashSet<ImageProduct>(0);
	private Set<CommentProduct> commentProducts = new HashSet<CommentProduct>(0);

	public Product() {
	}

	public Product(Brand brand, ProductType productType, Sale sale, Store store, String name, Date dateCreate,
			boolean status) {
		this.brand = brand;
		this.productType = productType;
		this.sale = sale;
		this.store = store;
		this.name = name;
		this.dateCreate = dateCreate;
		this.status = status;
	}

	public Product(Brand brand, ProductType productType, Sale sale, Store store, String name, String property,
			Long price, Integer quatily, String describe, Date dateCreate, boolean status,
			Set<EvaluateProduct> evaluateProducts, Set<OrderDetail> orderDetails, Set<ImageProduct> imageProducts,
			Set<CommentProduct> commentProducts) {
		this.brand = brand;
		this.productType = productType;
		this.sale = sale;
		this.store = store;
		this.name = name;
		this.property = property;
		this.price = price;
		this.quatily = quatily;
		this.describe = describe;
		this.dateCreate = dateCreate;
		this.status = status;
		this.evaluateProducts = evaluateProducts;
		this.orderDetails = orderDetails;
		this.imageProducts = imageProducts;
		this.commentProducts = commentProducts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_brand", nullable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type", nullable = false)
	public ProductType getProductType() {
		return this.productType;
	}

	public void setProductType(ProductType productType) {
		this.productType = productType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_sale", nullable = false)
	public Sale getSale() {
		return this.sale;
	}

	public void setSale(Sale sale) {
		this.sale = sale;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_store", nullable = false)
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Column(name = "name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "property", length = 65535)
	public String getProperty() {
		return this.property;
	}

	public void setProperty(String property) {
		this.property = property;
	}

	@Column(name = "price", precision = 10, scale = 0)
	public Long getPrice() {
		return this.price;
	}

	public void setPrice(Long price) {
		this.price = price;
	}

	@Column(name = "quatily")
	public Integer getQuatily() {
		return this.quatily;
	}

	public void setQuatily(Integer quatily) {
		this.quatily = quatily;
	}

	@Column(name = "describe", length = 65535)
	public String getDescribe() {
		return this.describe;
	}

	public void setDescribe(String describe) {
		this.describe = describe;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_create", nullable = false, length = 10)
	public Date getDateCreate() {
		return this.dateCreate;
	}

	public void setDateCreate(Date dateCreate) {
		this.dateCreate = dateCreate;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<EvaluateProduct> getEvaluateProducts() {
		return this.evaluateProducts;
	}

	public void setEvaluateProducts(Set<EvaluateProduct> evaluateProducts) {
		this.evaluateProducts = evaluateProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ImageProduct> getImageProducts() {
		return this.imageProducts;
	}

	public void setImageProducts(Set<ImageProduct> imageProducts) {
		this.imageProducts = imageProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<CommentProduct> getCommentProducts() {
		return this.commentProducts;
	}

	public void setCommentProducts(Set<CommentProduct> commentProducts) {
		this.commentProducts = commentProducts;
	}

}
